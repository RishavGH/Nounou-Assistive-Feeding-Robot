%% Real-Time Forward Kinematics based upon User-defined JointAngles

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Made by:
% Rishav Guha
% Paawan Garg
% Greg Huh
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function [EEposition] = calc_FKine2(config)

    a2 = 0.27;
    a3 = 0.07;
    d1 = 0.29;
    d4 = 0.302;
    a6 = 0.046;
    dT = 0.2069;
    theta1 = config(1); 
    theta2 = config(2);
    theta3 = config(3);
    theta4 = config(4);
    theta5 = config(5);
    theta6 = config(6);
    
    EEposition = [ - sin(theta6)*(cos(theta4)*sin(theta1) + sin(theta4)*(cos(theta1)*sin(theta3)*sin(theta2 - pi/2) - cos(theta1)*cos(theta3)*cos(theta2 - pi/2))) - cos(theta6)*(cos(theta5)*(sin(theta1)*sin(theta4) - cos(theta4)*(cos(theta1)*sin(theta3)*sin(theta2 - pi/2) - cos(theta1)*cos(theta3)*cos(theta2 - pi/2))) - sin(theta5)*(cos(theta1)*cos(theta3)*sin(theta2 - pi/2) + cos(theta1)*cos(theta2 - pi/2)*sin(theta3))), sin(theta6)*(cos(theta5)*(sin(theta1)*sin(theta4) - cos(theta4)*(cos(theta1)*sin(theta3)*sin(theta2 - pi/2) - cos(theta1)*cos(theta3)*cos(theta2 - pi/2))) - sin(theta5)*(cos(theta1)*cos(theta3)*sin(theta2 - pi/2) + cos(theta1)*cos(theta2 - pi/2)*sin(theta3))) - cos(theta6)*(cos(theta4)*sin(theta1) + sin(theta4)*(cos(theta1)*sin(theta3)*sin(theta2 - pi/2) - cos(theta1)*cos(theta3)*cos(theta2 - pi/2))), - sin(theta5)*(sin(theta1)*sin(theta4) - cos(theta4)*(cos(theta1)*sin(theta3)*sin(theta2 - pi/2) - cos(theta1)*cos(theta3)*cos(theta2 - pi/2))) - cos(theta5)*(cos(theta1)*cos(theta3)*sin(theta2 - pi/2) + cos(theta1)*cos(theta2 - pi/2)*sin(theta3)), a2*cos(theta1)*cos(theta2 - pi/2) - d4*(cos(theta1)*cos(theta3)*sin(theta2 - pi/2) + cos(theta1)*cos(theta2 - pi/2)*sin(theta3)) - dT*(sin(theta5)*(sin(theta1)*sin(theta4) - cos(theta4)*(cos(theta1)*sin(theta3)*sin(theta2 - pi/2) - cos(theta1)*cos(theta3)*cos(theta2 - pi/2))) + cos(theta5)*(cos(theta1)*cos(theta3)*sin(theta2 - pi/2) + cos(theta1)*cos(theta2 - pi/2)*sin(theta3))) - a6*(sin(theta6)*(cos(theta4)*sin(theta1) + sin(theta4)*(cos(theta1)*sin(theta3)*sin(theta2 - pi/2) - cos(theta1)*cos(theta3)*cos(theta2 - pi/2))) + cos(theta6)*(cos(theta5)*(sin(theta1)*sin(theta4) - cos(theta4)*(cos(theta1)*sin(theta3)*sin(theta2 - pi/2) - cos(theta1)*cos(theta3)*cos(theta2 - pi/2))) - sin(theta5)*(cos(theta1)*cos(theta3)*sin(theta2 - pi/2) + cos(theta1)*cos(theta2 - pi/2)*sin(theta3)))) - a3*(cos(theta1)*sin(theta3)*sin(theta2 - pi/2) - cos(theta1)*cos(theta3)*cos(theta2 - pi/2));
   sin(theta6)*(cos(theta1)*cos(theta4) + sin(theta4)*(cos(theta3)*cos(theta2 - pi/2)*sin(theta1) - sin(theta1)*sin(theta3)*sin(theta2 - pi/2))) + cos(theta6)*(cos(theta5)*(cos(theta1)*sin(theta4) - cos(theta4)*(cos(theta3)*cos(theta2 - pi/2)*sin(theta1) - sin(theta1)*sin(theta3)*sin(theta2 - pi/2))) + sin(theta5)*(cos(theta3)*sin(theta1)*sin(theta2 - pi/2) + cos(theta2 - pi/2)*sin(theta1)*sin(theta3))), cos(theta6)*(cos(theta1)*cos(theta4) + sin(theta4)*(cos(theta3)*cos(theta2 - pi/2)*sin(theta1) - sin(theta1)*sin(theta3)*sin(theta2 - pi/2))) - sin(theta6)*(cos(theta5)*(cos(theta1)*sin(theta4) - cos(theta4)*(cos(theta3)*cos(theta2 - pi/2)*sin(theta1) - sin(theta1)*sin(theta3)*sin(theta2 - pi/2))) + sin(theta5)*(cos(theta3)*sin(theta1)*sin(theta2 - pi/2) + cos(theta2 - pi/2)*sin(theta1)*sin(theta3))),   sin(theta5)*(cos(theta1)*sin(theta4) - cos(theta4)*(cos(theta3)*cos(theta2 - pi/2)*sin(theta1) - sin(theta1)*sin(theta3)*sin(theta2 - pi/2))) - cos(theta5)*(cos(theta3)*sin(theta1)*sin(theta2 - pi/2) + cos(theta2 - pi/2)*sin(theta1)*sin(theta3)), a3*(cos(theta3)*cos(theta2 - pi/2)*sin(theta1) - sin(theta1)*sin(theta3)*sin(theta2 - pi/2)) - d4*(cos(theta3)*sin(theta1)*sin(theta2 - pi/2) + cos(theta2 - pi/2)*sin(theta1)*sin(theta3)) + dT*(sin(theta5)*(cos(theta1)*sin(theta4) - cos(theta4)*(cos(theta3)*cos(theta2 - pi/2)*sin(theta1) - sin(theta1)*sin(theta3)*sin(theta2 - pi/2))) - cos(theta5)*(cos(theta3)*sin(theta1)*sin(theta2 - pi/2) + cos(theta2 - pi/2)*sin(theta1)*sin(theta3))) + a6*(sin(theta6)*(cos(theta1)*cos(theta4) + sin(theta4)*(cos(theta3)*cos(theta2 - pi/2)*sin(theta1) - sin(theta1)*sin(theta3)*sin(theta2 - pi/2))) + cos(theta6)*(cos(theta5)*(cos(theta1)*sin(theta4) - cos(theta4)*(cos(theta3)*cos(theta2 - pi/2)*sin(theta1) - sin(theta1)*sin(theta3)*sin(theta2 - pi/2))) + sin(theta5)*(cos(theta3)*sin(theta1)*sin(theta2 - pi/2) + cos(theta2 - pi/2)*sin(theta1)*sin(theta3)))) + a2*cos(theta2 - pi/2)*sin(theta1);
                                                                                                                                   cos(theta6)*(sin(theta5)*(cos(theta3)*cos(theta2 - pi/2) - sin(theta3)*sin(theta2 - pi/2)) + cos(theta4)*cos(theta5)*(cos(theta3)*sin(theta2 - pi/2) + cos(theta2 - pi/2)*sin(theta3))) - sin(theta4)*sin(theta6)*(cos(theta3)*sin(theta2 - pi/2) + cos(theta2 - pi/2)*sin(theta3)),                                                                                                                               - sin(theta6)*(sin(theta5)*(cos(theta3)*cos(theta2 - pi/2) - sin(theta3)*sin(theta2 - pi/2)) + cos(theta4)*cos(theta5)*(cos(theta3)*sin(theta2 - pi/2) + cos(theta2 - pi/2)*sin(theta3))) - cos(theta6)*sin(theta4)*(cos(theta3)*sin(theta2 - pi/2) + cos(theta2 - pi/2)*sin(theta3)),                                                                               cos(theta4)*sin(theta5)*(cos(theta3)*sin(theta2 - pi/2) + cos(theta2 - pi/2)*sin(theta3)) - cos(theta5)*(cos(theta3)*cos(theta2 - pi/2) - sin(theta3)*sin(theta2 - pi/2)),                                                                                                                                                                                                                                                                    d1 + a6*(cos(theta6)*(sin(theta5)*(cos(theta3)*cos(theta2 - pi/2) - sin(theta3)*sin(theta2 - pi/2)) + cos(theta4)*cos(theta5)*(cos(theta3)*sin(theta2 - pi/2) + cos(theta2 - pi/2)*sin(theta3))) - sin(theta4)*sin(theta6)*(cos(theta3)*sin(theta2 - pi/2) + cos(theta2 - pi/2)*sin(theta3))) - a3*(cos(theta3)*sin(theta2 - pi/2) + cos(theta2 - pi/2)*sin(theta3)) - d4*(cos(theta3)*cos(theta2 - pi/2) - sin(theta3)*sin(theta2 - pi/2)) - a2*sin(theta2 - pi/2) - dT*(cos(theta5)*(cos(theta3)*cos(theta2 - pi/2) - sin(theta3)*sin(theta2 - pi/2)) - cos(theta4)*sin(theta5)*(cos(theta3)*sin(theta2 - pi/2) + cos(theta2 - pi/2)*sin(theta3)));

    
    
end
